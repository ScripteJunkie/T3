{"ast":null,"code":"var _jsxFileName = \"/Users/ashtonmaze/Code/GitHub/T3/src/App.js\";\nimport React, { Component } from \"react\"; // import ReactDOM from \"react-dom\";\n\nimport * as THREE from \"three\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n    var scene = new THREE.Scene(); // const canvas = document.querySelector('viewport');\n\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000); // var renderer = new THREE.WebGLRenderer({ canvas });\n\n    var renderer = new THREE.WebGLRenderer();\n    scene.background = new THREE.Color('grey');\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    renderer.render(scene, camera);\n    var x = -10;\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0xdadada\n    });\n\n    for (i = 0; i < 100; i++) var cubei = new THREE.Mesh(geometry, material);\n\n    cubei.position.x = i / 10;\n    scene.add(cubei); // var geometry = new THREE.BoxGeometry( 2, 2, 2 );\n    // var material = new THREE.MeshBasicMaterial( { color: 0xdadada } );\n    // var cube = new THREE.Mesh( geometry, material );\n    // cube.castShadow = true;\n    // cube.receiveShadow = true;\n    // scene.add( cube );\n    // camera.position.z = 5;\n    // var animate = function () {\n    //   requestAnimationFrame( animate );\n    //   cube.rotation.x += 0.01;\n    //   cube.rotation.y += 0.01;\n    //   cube.rotation.z += 0.01;\n    //   renderer.render( scene, camera );\n    // };\n    // animate();\n    // === THREE.JS EXAMPLE CODE END ===\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"viewport\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ashtonmaze/Code/GitHub/T3/src/App.js"],"names":["React","Component","THREE","App","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","background","Color","setSize","document","body","appendChild","domElement","render","x","geometry","BoxGeometry","material","MeshBasicMaterial","color","i","cubei","Mesh","position","add"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAIC,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAV,EAAZ,CAFkB,CAGlB;;AACA,QAAIC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAA1D,EAAuE,GAAvE,EAA4E,IAA5E,CAAb,CAJkB,CAKlB;;AACA,QAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAV,EAAf;AACAR,IAAAA,KAAK,CAACS,UAAN,GAAmB,IAAIZ,KAAK,CAACa,KAAV,CAAgB,MAAhB,CAAnB;AACAH,IAAAA,QAAQ,CAACI,OAAT,CAAkBP,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAM,IAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA2BP,QAAQ,CAACQ,UAApC;AACAR,IAAAA,QAAQ,CAACS,MAAT,CAAiBhB,KAAjB,EAAwBE,MAAxB;AACA,QAAIe,CAAC,GAAG,CAAC,EAAT;AACA,QAAIC,QAAQ,GAAG,IAAIrB,KAAK,CAACsB,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAf;AACA,QAAIC,QAAQ,GAAG,IAAIvB,KAAK,CAACwB,iBAAV,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAf;;AACA,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,GAAhB,EAAqBA,CAAC,EAAtB,EACE,IAAIC,KAAK,GAAG,IAAI3B,KAAK,CAAC4B,IAAV,CAAgBP,QAAhB,EAA0BE,QAA1B,CAAZ;;AACAI,IAAAA,KAAK,CAACE,QAAN,CAAeT,CAAf,GAAoBM,CAAC,GAAC,EAAtB;AACAvB,IAAAA,KAAK,CAAC2B,GAAN,CAAWH,KAAX,EAjBgB,CAmBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACDR,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAzCyB;;AA2C5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from \"react\";\n// import ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport './App.css'\n\nclass App extends Component {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n    var scene = new THREE.Scene();\n    // const canvas = document.querySelector('viewport');\n    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n    // var renderer = new THREE.WebGLRenderer({ canvas });\n    var renderer = new THREE.WebGLRenderer();\n    scene.background = new THREE.Color('grey');\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    document.body.appendChild( renderer.domElement );\n    renderer.render( scene, camera );\n    var x = -10\n    var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n    var material = new THREE.MeshBasicMaterial( { color: 0xdadada } );\n    for (i = 0; i < 100; i++)\n      var cubei = new THREE.Mesh( geometry, material );\n      cubei.position.x = (i/10);\n      scene.add( cubei );\n\n    // var geometry = new THREE.BoxGeometry( 2, 2, 2 );\n    // var material = new THREE.MeshBasicMaterial( { color: 0xdadada } );\n    // var cube = new THREE.Mesh( geometry, material );\n    // cube.castShadow = true;\n    // cube.receiveShadow = true;\n    // scene.add( cube );\n    // camera.position.z = 5;\n    // var animate = function () {\n    //   requestAnimationFrame( animate );\n    //   cube.rotation.x += 0.01;\n    //   cube.rotation.y += 0.01;\n    //   cube.rotation.z += 0.01;\n    //   renderer.render( scene, camera );\n    // };\n    // animate();\n    // === THREE.JS EXAMPLE CODE END ===\n  }\n  render() {\n    return (\n      <div className=\"viewport\"></div>\n    )\n  }\n}\nexport default App"]},"metadata":{},"sourceType":"module"}